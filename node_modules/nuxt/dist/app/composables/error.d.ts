import type { H3Error } from 'h3';
export declare const NUXT_ERROR_SIGNATURE = "__nuxt_error";
export declare const useError: () => import("vue").Ref<Error | {
    url: string;
    statusCode: number;
    statusMessage: string;
    message: string;
    description: string;
    data?: any;
} | null | undefined>;
export interface NuxtError<DataT = unknown> extends H3Error<DataT> {
}
export declare const showError: <DataT = unknown>(error: string | Error | Partial<NuxtError<DataT>>) => NuxtError<DataT>;
export declare const clearError: (options?: {
    redirect?: string;
}) => Promise<void>;
export declare const isNuxtError: <DataT = unknown>(error?: string | object) => error is NuxtError<DataT>;
export declare const createError: <DataT = unknown>(error: string | Partial<NuxtError<DataT>>) => NuxtError<DataT>;
