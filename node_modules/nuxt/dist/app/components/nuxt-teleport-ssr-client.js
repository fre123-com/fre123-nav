import { Teleport, defineComponent, h } from "vue";
import { useNuxtApp } from "../nuxt.js";
import { paths } from "#build/components-chunk";
export default defineComponent({
  name: "NuxtTeleportSsrClient",
  props: {
    to: {
      type: String,
      required: true
    },
    nuxtClient: {
      type: Boolean,
      default: false
    },
    /**
     * ONLY used in dev mode since we use build:manifest result in production
     * do not pass any value in production
     */
    rootDir: {
      type: String,
      default: null
    }
  },
  setup(props, { slots }) {
    if (!props.nuxtClient) {
      return () => slots.default();
    }
    const app = useNuxtApp();
    const islandContext = app.ssrContext.islandContext;
    return () => {
      const slot = slots.default()[0];
      const slotType = slot.type;
      const name = slotType.__name || slotType.name;
      if (import.meta.dev) {
        const path = "_nuxt/" + paths[name];
        islandContext.chunks[name] = path;
      } else {
        islandContext.chunks[name] = paths[name];
      }
      islandContext.propsData[props.to] = slot.props || {};
      return [h("div", {
        style: "display: contents;",
        "nuxt-ssr-client": props.to
      }, []), h(Teleport, { to: props.to }, slot)];
    };
  }
});
