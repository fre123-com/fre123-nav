{"version":3,"sources":["../../src/FileDiagnosticManager.ts"],"sourcesContent":["import type { NormalizedDiagnostic } from './logger.js'\n\nclass FileDiagnosticManager {\n  public diagnostics: NormalizedDiagnostic[] = []\n  private initialized = false\n\n  /**\n   * Only used when initializing the manager\n   */\n  public initWith(diagnostics: NormalizedDiagnostic[]) {\n    if (this.initialized) {\n      throw new Error('FileDiagnosticManager is already initialized')\n    }\n\n    diagnostics.forEach((d) => {\n      this.diagnostics.push(d)\n    })\n\n    this.initialized = true\n  }\n\n  public getDiagnostics(fileName?: string) {\n    if (fileName) {\n      return this.diagnostics.filter((f) => f.id === fileName)\n    }\n\n    return this.diagnostics\n  }\n\n  public updateByFileId(fileId: string, next: NormalizedDiagnostic[] | null) {\n    for (let i = 0; i < this.diagnostics.length; i++) {\n      if (this.diagnostics[i]?.id === fileId) {\n        this.diagnostics.splice(i, 1)\n        i--\n      }\n    }\n\n    if (next?.length) {\n      this.diagnostics.push(...next)\n    }\n  }\n}\n\nexport { FileDiagnosticManager }\n"],"mappings":"AAEA,MAAM,sBAAsB;AAAA,EAA5B;AACE,SAAO,cAAsC,CAAC;AAC9C,SAAQ,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA,EAKf,SAAS,aAAqC;AACnD,QAAI,KAAK,aAAa;AACpB,YAAM,IAAI,MAAM,8CAA8C;AAAA,IAChE;AAEA,gBAAY,QAAQ,CAAC,MAAM;AACzB,WAAK,YAAY,KAAK,CAAC;AAAA,IACzB,CAAC;AAED,SAAK,cAAc;AAAA,EACrB;AAAA,EAEO,eAAe,UAAmB;AACvC,QAAI,UAAU;AACZ,aAAO,KAAK,YAAY,OAAO,CAAC,MAAM,EAAE,OAAO,QAAQ;AAAA,IACzD;AAEA,WAAO,KAAK;AAAA,EACd;AAAA,EAEO,eAAe,QAAgB,MAAqC;AA7B7E;AA8BI,aAAS,IAAI,GAAG,IAAI,KAAK,YAAY,QAAQ,KAAK;AAChD,YAAI,UAAK,YAAY,CAAC,MAAlB,mBAAqB,QAAO,QAAQ;AACtC,aAAK,YAAY,OAAO,GAAG,CAAC;AAC5B;AAAA,MACF;AAAA,IACF;AAEA,QAAI,6BAAM,QAAQ;AAChB,WAAK,YAAY,KAAK,GAAG,IAAI;AAAA,IAC/B;AAAA,EACF;AACF;","names":[]}