{
  "id": "#",
  "properties": {
    "components": {
      "title": "",
      "description": "",
      "tags": [],
      "tsType": "boolean | typeof import('../src/types/components').ComponentsOptions | typeof import('../src/types/components').ComponentsOptions['dirs']",
      "markdownType": "boolean | SrcTypesComponentsComponentsOptions | SrcTypesComponentsComponentsOptions['dirs']",
      "id": "#components",
      "default": {
        "dirs": [
          {
            "path": "~/components/global",
            "global": true
          },
          "~/components"
        ]
      },
      "type": "object"
    },
    "imports": {
      "title": "",
      "description": "",
      "tags": [],
      "tsType": "typeof import('../src/types/imports').ImportsOptions",
      "markdownType": "SrcTypesImportsImportsOptions",
      "id": "#imports",
      "properties": {
        "global": {
          "type": "boolean",
          "id": "#imports/global",
          "default": false
        },
        "dirs": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#imports/dirs",
          "default": [],
          "type": "array",
          "items": {
            "type": "any"
          }
        }
      },
      "default": {
        "global": false,
        "dirs": []
      },
      "type": "object"
    },
    "pages": {
      "title": "",
      "description": "",
      "tags": [],
      "type": "boolean",
      "tsType": "boolean",
      "id": "#pages"
    },
    "telemetry": {
      "title": "",
      "description": "",
      "tags": [],
      "tsType": "boolean | Record<string, any>",
      "id": "#telemetry",
      "default": {},
      "type": "any"
    },
    "devtools": {
      "title": "",
      "description": "",
      "tags": [],
      "tsType": " { enabled: boolean, [key: string]: any } ",
      "id": "#devtools",
      "default": {},
      "type": "any"
    },
    "vue": {
      "title": "",
      "description": "",
      "tags": [],
      "id": "#vue",
      "properties": {
        "compilerOptions": {
          "title": "",
          "description": "",
          "tags": [],
          "tsType": "typeof import('@vue/compiler-core').CompilerOptions",
          "markdownType": "@vueCompilerCoreCompilerOptions",
          "id": "#vue/compilerOptions",
          "default": {},
          "type": "any"
        },
        "runtimeCompiler": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#vue/runtimeCompiler",
          "default": false,
          "type": "boolean"
        },
        "propsDestructure": {
          "title": "",
          "description": "",
          "tags": [],
          "type": "boolean",
          "tsType": "boolean",
          "id": "#vue/propsDestructure",
          "default": false
        },
        "defineModel": {
          "title": "",
          "description": "",
          "tags": [],
          "type": "boolean",
          "tsType": "boolean",
          "id": "#vue/defineModel",
          "default": false
        }
      },
      "default": {
        "compilerOptions": {},
        "runtimeCompiler": false,
        "propsDestructure": false,
        "defineModel": false
      },
      "type": "object"
    },
    "app": {
      "title": "",
      "description": "",
      "tags": [],
      "id": "#app",
      "properties": {
        "baseURL": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#app/baseURL",
          "default": "/",
          "type": "string"
        },
        "buildAssetsDir": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#app/buildAssetsDir",
          "default": "/_nuxt/",
          "type": "string"
        },
        "cdnURL": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#app/cdnURL",
          "default": "",
          "type": "string"
        },
        "head": {
          "title": "",
          "description": "",
          "tags": [],
          "tsType": "typeof import('../src/types/config').NuxtAppConfig['head']",
          "markdownType": "SrcTypesConfigNuxtAppConfig['head']",
          "id": "#app/head",
          "default": {
            "meta": [
              {
                "name": "viewport",
                "content": "width=device-width, initial-scale=1"
              },
              {
                "charset": "utf-8"
              }
            ],
            "link": [],
            "style": [],
            "script": [],
            "noscript": []
          },
          "type": "object"
        },
        "layoutTransition": {
          "title": "",
          "description": "",
          "tags": [],
          "tsType": "typeof import('../src/types/config').NuxtAppConfig['layoutTransition']",
          "markdownType": "SrcTypesConfigNuxtAppConfig['layoutTransition']",
          "id": "#app/layoutTransition",
          "default": false,
          "type": "boolean"
        },
        "pageTransition": {
          "title": "",
          "description": "",
          "tags": [],
          "tsType": "typeof import('../src/types/config').NuxtAppConfig['pageTransition']",
          "markdownType": "SrcTypesConfigNuxtAppConfig['pageTransition']",
          "id": "#app/pageTransition",
          "default": false,
          "type": "boolean"
        },
        "keepalive": {
          "title": "",
          "description": "",
          "tags": [],
          "tsType": "typeof import('../src/types/config').NuxtAppConfig['keepalive']",
          "markdownType": "SrcTypesConfigNuxtAppConfig['keepalive']",
          "id": "#app/keepalive",
          "default": false,
          "type": "boolean"
        },
        "rootId": {
          "title": "",
          "description": "",
          "tags": [],
          "tsType": "string | false",
          "id": "#app/rootId",
          "default": "__nuxt",
          "type": "string"
        },
        "rootTag": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#app/rootTag",
          "default": "div",
          "type": "string"
        }
      },
      "default": {
        "baseURL": "/",
        "buildAssetsDir": "/_nuxt/",
        "cdnURL": "",
        "head": {
          "meta": [
            {
              "name": "viewport",
              "content": "width=device-width, initial-scale=1"
            },
            {
              "charset": "utf-8"
            }
          ],
          "link": [],
          "style": [],
          "script": [],
          "noscript": []
        },
        "layoutTransition": false,
        "pageTransition": false,
        "keepalive": false,
        "rootId": "__nuxt",
        "rootTag": "div"
      },
      "type": "object"
    },
    "spaLoadingTemplate": {
      "title": "",
      "description": "",
      "tags": [],
      "tsType": "string | boolean",
      "id": "#spaLoadingTemplate",
      "default": null,
      "type": "any"
    },
    "plugins": {
      "title": "",
      "description": "",
      "tags": [],
      "tsType": "(typeof import('../src/types/nuxt').NuxtPlugin | string)[]",
      "markdownType": "(SrcTypesNuxtNuxtPlugin | string)[]",
      "id": "#plugins",
      "default": [],
      "type": "array",
      "items": {
        "type": "any"
      }
    },
    "css": {
      "title": "",
      "description": "",
      "tags": [],
      "tsType": "string[]",
      "id": "#css",
      "default": [],
      "type": "array",
      "items": {
        "type": "any"
      }
    },
    "builder": {
      "title": "",
      "description": "",
      "tags": [],
      "tsType": "'vite' | 'webpack' | { bundle: (nuxt: typeof import('../src/types/nuxt').Nuxt) => Promise<void> }",
      "markdownType": "'vite' | 'webpack' | { bundle: (nuxt: SrcTypesNuxtNuxt) => Promise<void> }",
      "id": "#builder",
      "default": "@nuxt/vite-builder",
      "type": "string"
    },
    "sourcemap": {
      "title": "",
      "description": "",
      "tags": [],
      "tsType": "boolean | { server?: boolean | 'hidden', client?: boolean | 'hidden' }",
      "id": "#sourcemap",
      "default": {
        "server": true,
        "client": false
      },
      "type": "object"
    },
    "logLevel": {
      "title": "",
      "description": "",
      "tags": [],
      "tsType": "'silent' | 'info' | 'verbose'",
      "id": "#logLevel",
      "default": "info",
      "type": "string"
    },
    "build": {
      "title": "",
      "description": "",
      "tags": [],
      "id": "#build",
      "properties": {
        "transpile": {
          "title": "",
          "description": "",
          "tags": [],
          "tsType": "Array<string | RegExp | ((ctx: { isClient?: boolean; isServer?: boolean; isDev: boolean }) => string | RegExp | false)>",
          "id": "#build/transpile",
          "default": [],
          "type": "array",
          "items": {
            "type": "any"
          }
        },
        "templates": {
          "title": "",
          "description": "",
          "tags": [],
          "tsType": "typeof import('../src/types/nuxt').NuxtTemplate<any>[]",
          "markdownType": "SrcTypesNuxtNuxtTemplate<any>[]",
          "id": "#build/templates",
          "default": [],
          "type": "array",
          "items": {
            "type": "any"
          }
        },
        "analyze": {
          "title": "",
          "description": "",
          "tags": [],
          "tsType": "boolean | { enabled?: boolean } & ((0 extends 1 & typeof import('webpack-bundle-analyzer').BundleAnalyzerPlugin.Options ? {} : typeof import('webpack-bundle-analyzer').BundleAnalyzerPlugin.Options) | typeof import('rollup-plugin-visualizer').PluginVisualizerOptions)",
          "markdownType": "boolean | { enabled?: boolean } & ((0 extends 1 & WebpackBundleAnalyzerBundleAnalyzerPluginOptions ? {} : WebpackBundleAnalyzerBundleAnalyzerPluginOptions) | RollupPluginVisualizerPluginVisualizerOptions)",
          "id": "#build/analyze",
          "default": {
            "template": "treemap",
            "projectRoot": "/<rootDir>",
            "filename": "/<rootDir>/.nuxt/analyze/{name}.html"
          },
          "type": "object"
        }
      },
      "default": {
        "transpile": [],
        "templates": [],
        "analyze": {
          "template": "treemap",
          "projectRoot": "/<rootDir>",
          "filename": "/<rootDir>/.nuxt/analyze/{name}.html"
        }
      },
      "type": "object"
    },
    "optimization": {
      "title": "",
      "description": "",
      "tags": [],
      "id": "#optimization",
      "properties": {
        "keyedComposables": {
          "title": "",
          "description": "",
          "tags": [],
          "tsType": "Array<{ name: string, source?: string | RegExp, argumentLength: number }>",
          "id": "#optimization/keyedComposables",
          "default": [
            {
              "name": "callOnce",
              "argumentLength": 2
            },
            {
              "name": "defineNuxtComponent",
              "argumentLength": 2
            },
            {
              "name": "useState",
              "argumentLength": 2
            },
            {
              "name": "useFetch",
              "argumentLength": 3
            },
            {
              "name": "useAsyncData",
              "argumentLength": 3
            },
            {
              "name": "useLazyAsyncData",
              "argumentLength": 3
            },
            {
              "name": "useLazyFetch",
              "argumentLength": 3
            }
          ],
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "treeShake": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#optimization/treeShake",
          "properties": {
            "composables": {
              "title": "",
              "description": "",
              "tags": [],
              "id": "#optimization/treeShake/composables",
              "properties": {
                "server": {
                  "id": "#optimization/treeShake/composables/server",
                  "default": {
                    "vue": [
                      "onBeforeMount",
                      "onMounted",
                      "onBeforeUpdate",
                      "onRenderTracked",
                      "onRenderTriggered",
                      "onActivated",
                      "onDeactivated",
                      "onBeforeUnmount"
                    ],
                    "#app": [
                      "definePayloadReviver",
                      "definePageMeta"
                    ]
                  },
                  "type": "object"
                },
                "client": {
                  "id": "#optimization/treeShake/composables/client",
                  "default": {
                    "vue": [
                      "onServerPrefetch",
                      "onRenderTracked",
                      "onRenderTriggered"
                    ],
                    "#app": [
                      "definePayloadReducer",
                      "definePageMeta"
                    ]
                  },
                  "type": "object"
                }
              },
              "default": {
                "server": {
                  "vue": [
                    "onBeforeMount",
                    "onMounted",
                    "onBeforeUpdate",
                    "onRenderTracked",
                    "onRenderTriggered",
                    "onActivated",
                    "onDeactivated",
                    "onBeforeUnmount"
                  ],
                  "#app": [
                    "definePayloadReviver",
                    "definePageMeta"
                  ]
                },
                "client": {
                  "vue": [
                    "onServerPrefetch",
                    "onRenderTracked",
                    "onRenderTriggered"
                  ],
                  "#app": [
                    "definePayloadReducer",
                    "definePageMeta"
                  ]
                }
              },
              "type": "object"
            }
          },
          "default": {
            "composables": {
              "server": {
                "vue": [
                  "onBeforeMount",
                  "onMounted",
                  "onBeforeUpdate",
                  "onRenderTracked",
                  "onRenderTriggered",
                  "onActivated",
                  "onDeactivated",
                  "onBeforeUnmount"
                ],
                "#app": [
                  "definePayloadReviver",
                  "definePageMeta"
                ]
              },
              "client": {
                "vue": [
                  "onServerPrefetch",
                  "onRenderTracked",
                  "onRenderTriggered"
                ],
                "#app": [
                  "definePayloadReducer",
                  "definePageMeta"
                ]
              }
            }
          },
          "type": "object"
        },
        "asyncTransforms": {
          "title": "",
          "description": "",
          "tags": [],
          "tsType": "typeof import('unctx/transform').TransformerOptions",
          "markdownType": "UnctxTransformTransformerOptions",
          "id": "#optimization/asyncTransforms",
          "properties": {
            "asyncFunctions": {
              "type": "array",
              "id": "#optimization/asyncTransforms/asyncFunctions",
              "default": [
                "defineNuxtPlugin",
                "defineNuxtRouteMiddleware"
              ],
              "items": {
                "type": "string"
              }
            },
            "objectDefinitions": {
              "id": "#optimization/asyncTransforms/objectDefinitions",
              "properties": {
                "defineNuxtComponent": {
                  "type": "array",
                  "id": "#optimization/asyncTransforms/objectDefinitions/defineNuxtComponent",
                  "default": [
                    "asyncData",
                    "setup"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "defineNuxtPlugin": {
                  "type": "array",
                  "id": "#optimization/asyncTransforms/objectDefinitions/defineNuxtPlugin",
                  "default": [
                    "setup"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "definePageMeta": {
                  "type": "array",
                  "id": "#optimization/asyncTransforms/objectDefinitions/definePageMeta",
                  "default": [
                    "middleware",
                    "validate"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              },
              "default": {
                "defineNuxtComponent": [
                  "asyncData",
                  "setup"
                ],
                "defineNuxtPlugin": [
                  "setup"
                ],
                "definePageMeta": [
                  "middleware",
                  "validate"
                ]
              },
              "type": "object"
            }
          },
          "default": {
            "asyncFunctions": [
              "defineNuxtPlugin",
              "defineNuxtRouteMiddleware"
            ],
            "objectDefinitions": {
              "defineNuxtComponent": [
                "asyncData",
                "setup"
              ],
              "defineNuxtPlugin": [
                "setup"
              ],
              "definePageMeta": [
                "middleware",
                "validate"
              ]
            }
          },
          "type": "object"
        }
      },
      "default": {
        "keyedComposables": [
          {
            "name": "callOnce",
            "argumentLength": 2
          },
          {
            "name": "defineNuxtComponent",
            "argumentLength": 2
          },
          {
            "name": "useState",
            "argumentLength": 2
          },
          {
            "name": "useFetch",
            "argumentLength": 3
          },
          {
            "name": "useAsyncData",
            "argumentLength": 3
          },
          {
            "name": "useLazyAsyncData",
            "argumentLength": 3
          },
          {
            "name": "useLazyFetch",
            "argumentLength": 3
          }
        ],
        "treeShake": {
          "composables": {
            "server": {
              "vue": [
                "onBeforeMount",
                "onMounted",
                "onBeforeUpdate",
                "onRenderTracked",
                "onRenderTriggered",
                "onActivated",
                "onDeactivated",
                "onBeforeUnmount"
              ],
              "#app": [
                "definePayloadReviver",
                "definePageMeta"
              ]
            },
            "client": {
              "vue": [
                "onServerPrefetch",
                "onRenderTracked",
                "onRenderTriggered"
              ],
              "#app": [
                "definePayloadReducer",
                "definePageMeta"
              ]
            }
          }
        },
        "asyncTransforms": {
          "asyncFunctions": [
            "defineNuxtPlugin",
            "defineNuxtRouteMiddleware"
          ],
          "objectDefinitions": {
            "defineNuxtComponent": [
              "asyncData",
              "setup"
            ],
            "defineNuxtPlugin": [
              "setup"
            ],
            "definePageMeta": [
              "middleware",
              "validate"
            ]
          }
        }
      },
      "type": "object"
    },
    "extends": {
      "title": "",
      "description": "",
      "tags": [],
      "tsType": "string | [string, typeof import('c12').SourceOptions?] | (string | [string, typeof import('c12').SourceOptions?])[]",
      "markdownType": "string | [string, C12SourceOptions?] | (string | [string, C12SourceOptions?])[]",
      "id": "#extends",
      "default": null,
      "type": "any"
    },
    "theme": {
      "title": "",
      "description": "",
      "tags": [],
      "type": "string",
      "tsType": "string",
      "id": "#theme",
      "default": null
    },
    "rootDir": {
      "title": "",
      "description": "",
      "tags": [],
      "id": "#rootDir",
      "default": "/<rootDir>",
      "type": "string"
    },
    "workspaceDir": {
      "title": "",
      "description": "",
      "tags": [],
      "id": "#workspaceDir",
      "default": "/<rootDir>",
      "type": "string"
    },
    "srcDir": {
      "title": "",
      "description": "",
      "tags": [],
      "id": "#srcDir",
      "default": "/<rootDir>",
      "type": "string"
    },
    "serverDir": {
      "title": "",
      "description": "",
      "tags": [],
      "id": "#serverDir",
      "default": "/<rootDir>/server",
      "type": "string"
    },
    "buildDir": {
      "title": "",
      "description": "",
      "tags": [],
      "id": "#buildDir",
      "default": "/<rootDir>/.nuxt",
      "type": "string"
    },
    "modulesDir": {
      "title": "",
      "description": "",
      "tags": [],
      "id": "#modulesDir",
      "default": [
        "/<rootDir>/node_modules",
        "/Users/daniel/code/nuxt.js/packages/schema/node_modules"
      ],
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "analyzeDir": {
      "title": "",
      "description": "",
      "tags": [],
      "id": "#analyzeDir",
      "default": "/<rootDir>/.nuxt/analyze",
      "type": "string"
    },
    "dev": {
      "title": "",
      "description": "",
      "tags": [],
      "id": "#dev",
      "default": false,
      "type": "boolean"
    },
    "test": {
      "title": "",
      "description": "",
      "tags": [],
      "id": "#test",
      "default": false,
      "type": "boolean"
    },
    "debug": {
      "title": "",
      "description": "",
      "tags": [],
      "id": "#debug",
      "default": false,
      "type": "boolean"
    },
    "ssr": {
      "title": "",
      "description": "",
      "tags": [],
      "id": "#ssr",
      "default": true,
      "type": "boolean"
    },
    "modules": {
      "title": "",
      "description": "",
      "tags": [],
      "tsType": "(typeof import('../src/types/module').NuxtModule | string | [typeof import('../src/types/module').NuxtModule | string, Record<string, any>] | undefined | null | false)[]",
      "markdownType": "(SrcTypesModuleNuxtModule | string | [SrcTypesModuleNuxtModule | string, Record<string, any>] | undefined | null | false)[]",
      "id": "#modules",
      "default": [],
      "type": "array",
      "items": {
        "type": "any"
      }
    },
    "dir": {
      "title": "",
      "description": "",
      "tags": [],
      "id": "#dir",
      "properties": {
        "assets": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#dir/assets",
          "default": "assets",
          "type": "string"
        },
        "layouts": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#dir/layouts",
          "default": "layouts",
          "type": "string"
        },
        "middleware": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#dir/middleware",
          "default": "middleware",
          "type": "string"
        },
        "modules": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#dir/modules",
          "default": "modules",
          "type": "string"
        },
        "pages": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#dir/pages",
          "default": "pages",
          "type": "string"
        },
        "plugins": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#dir/plugins",
          "default": "plugins",
          "type": "string"
        },
        "public": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#dir/public",
          "default": "public",
          "type": "string"
        },
        "static": {
          "deprecated": "use `dir.public` option instead",
          "id": "#dir/static",
          "default": "public",
          "type": "string"
        }
      },
      "default": {
        "assets": "assets",
        "layouts": "layouts",
        "middleware": "middleware",
        "modules": "modules",
        "pages": "pages",
        "plugins": "plugins",
        "static": "public",
        "public": "public"
      },
      "type": "object"
    },
    "extensions": {
      "title": "",
      "description": "",
      "tags": [],
      "id": "#extensions",
      "default": [
        ".js",
        ".jsx",
        ".mjs",
        ".ts",
        ".tsx",
        ".vue"
      ],
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "alias": {
      "title": "",
      "description": "",
      "tags": [],
      "tsType": "Record<string, string>",
      "id": "#alias",
      "default": {
        "~": "/<rootDir>",
        "@": "/<rootDir>",
        "~~": "/<rootDir>",
        "@@": "/<rootDir>",
        "assets": "/<rootDir>/assets",
        "public": "/<rootDir>/public"
      },
      "type": "object"
    },
    "ignoreOptions": {
      "title": "",
      "description": "",
      "tags": [],
      "tsType": "typeof import('ignore').Options",
      "markdownType": "IgnoreOptions",
      "id": "#ignoreOptions",
      "default": {},
      "type": "any"
    },
    "ignorePrefix": {
      "title": "",
      "description": "",
      "tags": [],
      "id": "#ignorePrefix",
      "default": "-",
      "type": "string"
    },
    "ignore": {
      "title": "",
      "description": "",
      "tags": [],
      "id": "#ignore",
      "default": [
        "**/*.stories.{js,cts,mts,ts,jsx,tsx}",
        "**/*.{spec,test}.{js,cts,mts,ts,jsx,tsx}",
        "**/*.d.{cts,mts,ts}",
        "**/.{pnpm-store,vercel,netlify,output,git,cache,data}",
        ".nuxt/analyze",
        ".nuxt",
        "**/-*.*"
      ],
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "watch": {
      "title": "",
      "description": "",
      "tags": [],
      "tsType": "Array<string | RegExp>",
      "id": "#watch",
      "default": [],
      "type": "array",
      "items": {
        "type": "any"
      }
    },
    "watchers": {
      "title": "",
      "description": "",
      "tags": [],
      "id": "#watchers",
      "properties": {
        "rewatchOnRawEvents": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#watchers/rewatchOnRawEvents",
          "default": {},
          "type": "any"
        },
        "webpack": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#watchers/webpack",
          "properties": {
            "aggregateTimeout": {
              "type": "number",
              "id": "#watchers/webpack/aggregateTimeout",
              "default": 1000
            }
          },
          "default": {
            "aggregateTimeout": 1000
          },
          "type": "object"
        },
        "chokidar": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#watchers/chokidar",
          "properties": {
            "ignoreInitial": {
              "type": "boolean",
              "id": "#watchers/chokidar/ignoreInitial",
              "default": true
            }
          },
          "default": {
            "ignoreInitial": true
          },
          "type": "object"
        }
      },
      "default": {
        "rewatchOnRawEvents": {},
        "webpack": {
          "aggregateTimeout": 1000
        },
        "chokidar": {
          "ignoreInitial": true
        }
      },
      "type": "object"
    },
    "hooks": {
      "title": "",
      "description": "",
      "tags": [],
      "tsType": "typeof import('../src/types/hooks').NuxtHooks",
      "markdownType": "SrcTypesHooksNuxtHooks",
      "id": "#hooks",
      "default": null,
      "type": "any"
    },
    "runtimeConfig": {
      "title": "",
      "description": "",
      "tags": [],
      "tsType": "typeof import('../src/types/config').RuntimeConfig",
      "markdownType": "SrcTypesConfigRuntimeConfig",
      "id": "#runtimeConfig",
      "default": {
        "public": {},
        "app": {
          "baseURL": "/",
          "buildAssetsDir": "/_nuxt/",
          "cdnURL": ""
        }
      },
      "type": "object"
    },
    "appConfig": {
      "title": "",
      "description": "",
      "tags": [],
      "tsType": "typeof import('../src/types/config').AppConfig",
      "markdownType": "SrcTypesConfigAppConfig",
      "id": "#appConfig",
      "properties": {
        "nuxt": {
          "id": "#appConfig/nuxt",
          "default": {},
          "type": "any"
        }
      },
      "default": {
        "nuxt": {}
      },
      "type": "object"
    },
    "devServer": {
      "id": "#devServer",
      "properties": {
        "https": {
          "title": "",
          "description": "",
          "tags": [],
          "tsType": "boolean | { key: string; cert: string }",
          "id": "#devServer/https",
          "default": false,
          "type": "boolean"
        },
        "port": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#devServer/port",
          "default": 3000,
          "type": "number"
        },
        "host": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#devServer/host",
          "default": {},
          "type": "any"
        },
        "url": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#devServer/url",
          "default": "http://localhost:3000",
          "type": "string"
        },
        "loadingTemplate": {
          "title": "",
          "description": "",
          "tags": [],
          "tsType": "(data: { loading?: string }) => string",
          "id": "#devServer/loadingTemplate",
          "type": "function"
        }
      },
      "default": {
        "https": false,
        "port": 3000,
        "host": {},
        "url": "http://localhost:3000"
      },
      "type": "object"
    },
    "future": {
      "title": "",
      "description": "",
      "tags": [],
      "id": "#future",
      "properties": {
        "typescriptBundlerResolution": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#future/typescriptBundlerResolution",
          "default": false,
          "type": "boolean"
        }
      },
      "default": {
        "typescriptBundlerResolution": false
      },
      "type": "object"
    },
    "features": {
      "title": "",
      "description": "",
      "tags": [],
      "id": "#features",
      "properties": {
        "inlineStyles": {
          "title": "",
          "description": "",
          "tags": [],
          "tsType": "boolean | ((id?: string) => boolean)",
          "id": "#features/inlineStyles",
          "default": true,
          "type": "boolean"
        },
        "noScripts": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#features/noScripts",
          "default": false,
          "type": "boolean"
        }
      },
      "default": {
        "inlineStyles": true,
        "noScripts": false
      },
      "type": "object"
    },
    "experimental": {
      "id": "#experimental",
      "properties": {
        "asyncEntry": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#experimental/asyncEntry",
          "default": false,
          "type": "boolean"
        },
        "externalVue": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#experimental/externalVue",
          "default": true,
          "type": "boolean"
        },
        "treeshakeClientOnly": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#experimental/treeshakeClientOnly",
          "default": true,
          "type": "boolean"
        },
        "emitRouteChunkError": {
          "title": "",
          "description": "",
          "tags": [],
          "tsType": "false | 'manual' | 'automatic'",
          "id": "#experimental/emitRouteChunkError",
          "default": "automatic",
          "type": "string"
        },
        "templateRouteInjection": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#experimental/templateRouteInjection",
          "default": true,
          "type": "boolean"
        },
        "restoreState": {
          "title": "",
          "description": "",
          "tags": [],
          "type": "boolean",
          "tsType": "boolean",
          "id": "#experimental/restoreState",
          "default": false
        },
        "renderJsonPayloads": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#experimental/renderJsonPayloads",
          "default": true,
          "type": "boolean"
        },
        "noVueServer": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#experimental/noVueServer",
          "default": false,
          "type": "boolean"
        },
        "payloadExtraction": {
          "title": "",
          "description": "",
          "tags": [],
          "tsType": "boolean | undefined",
          "id": "#experimental/payloadExtraction",
          "default": true,
          "type": "boolean"
        },
        "clientFallback": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#experimental/clientFallback",
          "default": false,
          "type": "boolean"
        },
        "crossOriginPrefetch": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#experimental/crossOriginPrefetch",
          "default": false,
          "type": "boolean"
        },
        "viewTransition": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#experimental/viewTransition",
          "default": false,
          "type": "boolean"
        },
        "writeEarlyHints": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#experimental/writeEarlyHints",
          "default": false,
          "type": "boolean"
        },
        "componentIslands": {
          "title": "",
          "description": "",
          "tags": [],
          "tsType": "true | 'local' | 'local+remote' | Partial<{ remoteIsland: boolean, selectiveClient: boolean }> | false",
          "id": "#experimental/componentIslands",
          "default": false,
          "type": "boolean"
        },
        "configSchema": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#experimental/configSchema",
          "default": true,
          "type": "boolean"
        },
        "polyfillVueUseHead": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#experimental/polyfillVueUseHead",
          "default": false,
          "type": "boolean"
        },
        "respectNoSSRHeader": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#experimental/respectNoSSRHeader",
          "default": false,
          "type": "boolean"
        },
        "localLayerAliases": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#experimental/localLayerAliases",
          "default": true,
          "type": "boolean"
        },
        "typedPages": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#experimental/typedPages",
          "default": false,
          "type": "boolean"
        },
        "appManifest": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#experimental/appManifest",
          "default": true,
          "type": "boolean"
        },
        "watcher": {
          "title": "",
          "description": "",
          "tags": [],
          "tsType": "'chokidar' | 'parcel' | 'chokidar-granular'",
          "id": "#experimental/watcher",
          "default": "chokidar-granular",
          "type": "string"
        },
        "asyncContext": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#experimental/asyncContext",
          "default": false,
          "type": "boolean"
        },
        "headNext": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#experimental/headNext",
          "default": false,
          "type": "boolean"
        },
        "inlineRouteRules": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#experimental/inlineRouteRules",
          "default": false,
          "type": "boolean"
        },
        "defaults": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#experimental/defaults",
          "properties": {
            "nuxtLink": {
              "title": "",
              "description": "",
              "tags": [],
              "tsType": "typeof import('#app/components/nuxt-link')['NuxtLinkOptions']",
              "markdownType": "#appComponentsNuxtLinkNuxtLinkOptions",
              "id": "#experimental/defaults/nuxtLink",
              "properties": {
                "componentName": {
                  "type": "string",
                  "id": "#experimental/defaults/nuxtLink/componentName",
                  "default": "NuxtLink"
                }
              },
              "default": {
                "componentName": "NuxtLink"
              },
              "type": "object"
            },
            "useAsyncData": {
              "title": "",
              "description": "",
              "tags": [],
              "id": "#experimental/defaults/useAsyncData",
              "properties": {
                "deep": {
                  "type": "boolean",
                  "id": "#experimental/defaults/useAsyncData/deep",
                  "default": true
                }
              },
              "default": {
                "deep": true
              },
              "type": "object"
            },
            "useFetch": {
              "title": "",
              "description": "",
              "tags": [],
              "tsType": "Pick<typeof import('ofetch')['FetchOptions'], 'timeout' | 'retry' | 'retryDelay' | 'retryStatusCodes'>",
              "markdownType": "Pick<OfetchFetchOptions, 'timeout' | 'retry' | 'retryDelay' | 'retryStatusCodes'>",
              "id": "#experimental/defaults/useFetch",
              "default": {},
              "type": "any"
            }
          },
          "default": {
            "nuxtLink": {
              "componentName": "NuxtLink"
            },
            "useAsyncData": {
              "deep": true
            },
            "useFetch": {}
          },
          "type": "object"
        }
      },
      "default": {
        "asyncEntry": false,
        "externalVue": true,
        "treeshakeClientOnly": true,
        "emitRouteChunkError": "automatic",
        "templateRouteInjection": true,
        "restoreState": false,
        "renderJsonPayloads": true,
        "noVueServer": false,
        "payloadExtraction": true,
        "clientFallback": false,
        "crossOriginPrefetch": false,
        "viewTransition": false,
        "writeEarlyHints": false,
        "componentIslands": false,
        "configSchema": true,
        "polyfillVueUseHead": false,
        "respectNoSSRHeader": false,
        "localLayerAliases": true,
        "typedPages": false,
        "appManifest": true,
        "watcher": "chokidar-granular",
        "asyncContext": false,
        "headNext": false,
        "inlineRouteRules": false,
        "defaults": {
          "nuxtLink": {
            "componentName": "NuxtLink"
          },
          "useAsyncData": {
            "deep": true
          },
          "useFetch": {}
        }
      },
      "type": "object"
    },
    "generate": {
      "id": "#generate",
      "properties": {
        "routes": {
          "title": "",
          "description": "",
          "tags": [],
          "tsType": "string | string[]",
          "id": "#generate/routes",
          "default": [],
          "type": "array",
          "items": {
            "type": "any"
          }
        },
        "exclude": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#generate/exclude",
          "default": [],
          "type": "array",
          "items": {
            "type": "any"
          }
        }
      },
      "default": {
        "routes": [],
        "exclude": []
      },
      "type": "object"
    },
    "_majorVersion": {
      "title": "",
      "description": "",
      "tags": [],
      "id": "#_majorVersion",
      "default": 3,
      "type": "number"
    },
    "_legacyGenerate": {
      "title": "",
      "description": "",
      "tags": [],
      "id": "#_legacyGenerate",
      "default": false,
      "type": "boolean"
    },
    "_start": {
      "title": "",
      "description": "",
      "tags": [],
      "id": "#_start",
      "default": false,
      "type": "boolean"
    },
    "_build": {
      "title": "",
      "description": "",
      "tags": [],
      "id": "#_build",
      "default": false,
      "type": "boolean"
    },
    "_generate": {
      "title": "",
      "description": "",
      "tags": [],
      "id": "#_generate",
      "default": false,
      "type": "boolean"
    },
    "_prepare": {
      "title": "",
      "description": "",
      "tags": [],
      "id": "#_prepare",
      "default": false,
      "type": "boolean"
    },
    "_cli": {
      "title": "",
      "description": "",
      "tags": [],
      "id": "#_cli",
      "default": false,
      "type": "boolean"
    },
    "_requiredModules": {
      "title": "",
      "description": "",
      "tags": [],
      "id": "#_requiredModules",
      "default": {},
      "type": "any"
    },
    "_nuxtConfigFile": {
      "title": "",
      "description": "",
      "tags": [],
      "id": "#_nuxtConfigFile",
      "default": {},
      "type": "any"
    },
    "_nuxtConfigFiles": {
      "title": "",
      "description": "",
      "tags": [],
      "id": "#_nuxtConfigFiles",
      "default": [],
      "type": "array",
      "items": {
        "type": "any"
      }
    },
    "appDir": {
      "title": "",
      "description": "",
      "tags": [],
      "id": "#appDir",
      "default": "",
      "type": "string"
    },
    "_installedModules": {
      "title": "",
      "description": "",
      "tags": [],
      "id": "#_installedModules",
      "default": [],
      "type": "array",
      "items": {
        "type": "any"
      }
    },
    "_modules": {
      "title": "",
      "description": "",
      "tags": [],
      "id": "#_modules",
      "default": [],
      "type": "array",
      "items": {
        "type": "any"
      }
    },
    "nitro": {
      "title": "",
      "description": "",
      "tags": [],
      "tsType": "typeof import('nitropack')['NitroConfig']",
      "markdownType": "NitropackNitroConfig",
      "id": "#nitro",
      "properties": {
        "routeRules": {
          "id": "#nitro/routeRules",
          "default": {},
          "type": "object"
        }
      },
      "default": {
        "routeRules": {}
      },
      "type": "object"
    },
    "routeRules": {
      "title": "",
      "description": "",
      "tags": [],
      "tsType": "typeof import('nitropack')['NitroConfig']['routeRules']",
      "markdownType": "NitropackNitroConfig['routeRules']",
      "id": "#routeRules",
      "default": {},
      "type": "any"
    },
    "serverHandlers": {
      "title": "",
      "description": "",
      "tags": [],
      "tsType": "typeof import('nitropack')['NitroEventHandler'][]",
      "markdownType": "NitropackNitroEventHandler[]",
      "id": "#serverHandlers",
      "default": [],
      "type": "array",
      "items": {
        "type": "any"
      }
    },
    "devServerHandlers": {
      "title": "",
      "description": "",
      "tags": [],
      "tsType": "typeof import('nitropack')['NitroDevEventHandler'][]",
      "markdownType": "NitropackNitroDevEventHandler[]",
      "id": "#devServerHandlers",
      "default": [],
      "type": "array",
      "items": {
        "type": "any"
      }
    },
    "postcss": {
      "id": "#postcss",
      "properties": {
        "plugins": {
          "title": "",
          "description": "",
          "tags": [],
          "tsType": "Record<string, any> & { autoprefixer?: any; cssnano?: any }",
          "id": "#postcss/plugins",
          "properties": {
            "autoprefixer": {
              "title": "",
              "description": "",
              "tags": [],
              "id": "#postcss/plugins/autoprefixer",
              "default": {},
              "type": "any"
            },
            "cssnano": {
              "title": "",
              "description": "",
              "tags": [],
              "id": "#postcss/plugins/cssnano",
              "default": {},
              "type": "object"
            }
          },
          "default": {
            "autoprefixer": {},
            "cssnano": {}
          },
          "type": "object"
        }
      },
      "default": {
        "plugins": {
          "autoprefixer": {},
          "cssnano": {}
        }
      },
      "type": "object"
    },
    "router": {
      "id": "#router",
      "properties": {
        "options": {
          "title": "",
          "description": "",
          "tags": [],
          "tsType": "typeof import('../src/types/router').RouterConfigSerializable",
          "markdownType": "SrcTypesRouterRouterConfigSerializable",
          "id": "#router/options",
          "properties": {
            "hashMode": {
              "title": "",
              "description": "",
              "tags": [],
              "tsType": "typeof import('../src/types/router').RouterConfigSerializable['hashMode']",
              "markdownType": "SrcTypesRouterRouterConfigSerializable['hashMode']",
              "id": "#router/options/hashMode",
              "default": false,
              "type": "boolean"
            },
            "scrollBehaviorType": {
              "title": "",
              "description": "",
              "tags": [],
              "tsType": "typeof import('../src/types/router').RouterConfigSerializable['scrollBehaviorType']",
              "markdownType": "SrcTypesRouterRouterConfigSerializable['scrollBehaviorType']",
              "id": "#router/options/scrollBehaviorType",
              "default": "auto",
              "type": "string"
            }
          },
          "default": {
            "hashMode": false,
            "scrollBehaviorType": "auto"
          },
          "type": "object"
        }
      },
      "default": {
        "options": {
          "hashMode": false,
          "scrollBehaviorType": "auto"
        }
      },
      "type": "object"
    },
    "typescript": {
      "title": "",
      "description": "",
      "tags": [],
      "id": "#typescript",
      "properties": {
        "strict": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#typescript/strict",
          "default": true,
          "type": "boolean"
        },
        "builder": {
          "title": "",
          "description": "",
          "tags": [],
          "tsType": "'vite' | 'webpack' | 'shared' | false | undefined",
          "id": "#typescript/builder",
          "default": null,
          "type": "any"
        },
        "includeWorkspace": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#typescript/includeWorkspace",
          "default": false,
          "type": "boolean"
        },
        "typeCheck": {
          "title": "",
          "description": "",
          "tags": [],
          "tsType": "boolean | 'build'",
          "id": "#typescript/typeCheck",
          "default": false,
          "type": "boolean"
        },
        "tsConfig": {
          "title": "",
          "description": "",
          "tags": [],
          "tsType": "typeof import('pkg-types')['TSConfig']",
          "markdownType": "PkgTypesTSConfig",
          "id": "#typescript/tsConfig",
          "default": {
            "compilerOptions": {}
          },
          "type": "object"
        },
        "shim": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#typescript/shim",
          "default": true,
          "type": "boolean"
        }
      },
      "default": {
        "tsConfig": {
          "compilerOptions": {}
        },
        "strict": true,
        "builder": null,
        "includeWorkspace": false,
        "typeCheck": false,
        "shim": true
      },
      "type": "object"
    },
    "vite": {
      "title": "",
      "description": "",
      "tags": [],
      "tsType": "typeof import('../src/types/config').ViteConfig & { $client?: typeof import('../src/types/config').ViteConfig, $server?: typeof import('../src/types/config').ViteConfig }",
      "markdownType": "SrcTypesConfigViteConfig & { $client?: SrcTypesConfigViteConfig, $server?: SrcTypesConfigViteConfig }",
      "id": "#vite",
      "properties": {
        "root": {
          "id": "#vite/root",
          "default": "/<rootDir>",
          "type": "string"
        },
        "mode": {
          "id": "#vite/mode",
          "default": "production",
          "type": "string"
        },
        "define": {
          "id": "#vite/define",
          "default": {
            "__VUE_PROD_HYDRATION_MISMATCH_DETAILS__": false,
            "process.dev": false,
            "import.meta.dev": false,
            "process.test": false,
            "import.meta.test": false
          },
          "type": "object"
        },
        "resolve": {
          "id": "#vite/resolve",
          "properties": {
            "extensions": {
              "type": "array",
              "id": "#vite/resolve/extensions",
              "default": [
                ".mjs",
                ".js",
                ".ts",
                ".jsx",
                ".tsx",
                ".json",
                ".vue"
              ],
              "items": {
                "type": "string"
              }
            }
          },
          "default": {
            "extensions": [
              ".mjs",
              ".js",
              ".ts",
              ".jsx",
              ".tsx",
              ".json",
              ".vue"
            ]
          },
          "type": "object"
        },
        "publicDir": {
          "id": "#vite/publicDir",
          "default": "/<rootDir>/public",
          "type": "string"
        },
        "vue": {
          "id": "#vite/vue",
          "properties": {
            "isProduction": {
              "id": "#vite/vue/isProduction",
              "default": true,
              "type": "boolean"
            },
            "template": {
              "id": "#vite/vue/template",
              "properties": {
                "compilerOptions": {
                  "id": "#vite/vue/template/compilerOptions",
                  "default": {},
                  "type": "object"
                }
              },
              "default": {
                "compilerOptions": {}
              },
              "type": "object"
            },
            "script": {
              "id": "#vite/vue/script",
              "properties": {
                "propsDestructure": {
                  "id": "#vite/vue/script/propsDestructure",
                  "default": false,
                  "type": "boolean"
                },
                "defineModel": {
                  "id": "#vite/vue/script/defineModel",
                  "default": false,
                  "type": "boolean"
                }
              },
              "default": {
                "propsDestructure": false,
                "defineModel": false
              },
              "type": "object"
            }
          },
          "default": {
            "isProduction": true,
            "template": {
              "compilerOptions": {}
            },
            "script": {
              "propsDestructure": false,
              "defineModel": false
            }
          },
          "type": "object"
        },
        "vueJsx": {
          "id": "#vite/vueJsx",
          "default": {},
          "type": "object"
        },
        "optimizeDeps": {
          "id": "#vite/optimizeDeps",
          "properties": {
            "exclude": {
              "id": "#vite/optimizeDeps/exclude",
              "default": [
                "vue-demi"
              ],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "default": {
            "exclude": [
              "vue-demi"
            ]
          },
          "type": "object"
        },
        "esbuild": {
          "id": "#vite/esbuild",
          "properties": {
            "jsxFactory": {
              "type": "string",
              "id": "#vite/esbuild/jsxFactory",
              "default": "h"
            },
            "jsxFragment": {
              "type": "string",
              "id": "#vite/esbuild/jsxFragment",
              "default": "Fragment"
            },
            "tsconfigRaw": {
              "type": "string",
              "id": "#vite/esbuild/tsconfigRaw",
              "default": "{}"
            }
          },
          "default": {
            "jsxFactory": "h",
            "jsxFragment": "Fragment",
            "tsconfigRaw": "{}"
          },
          "type": "object"
        },
        "clearScreen": {
          "type": "boolean",
          "id": "#vite/clearScreen",
          "default": true
        },
        "build": {
          "id": "#vite/build",
          "properties": {
            "assetsDir": {
              "id": "#vite/build/assetsDir",
              "default": "_nuxt/",
              "type": "string"
            },
            "emptyOutDir": {
              "type": "boolean",
              "id": "#vite/build/emptyOutDir",
              "default": false
            }
          },
          "default": {
            "assetsDir": "_nuxt/",
            "emptyOutDir": false
          },
          "type": "object"
        },
        "server": {
          "id": "#vite/server",
          "properties": {
            "fs": {
              "id": "#vite/server/fs",
              "properties": {
                "allow": {
                  "id": "#vite/server/fs/allow",
                  "default": [
                    "/<rootDir>/.nuxt",
                    "/<rootDir>",
                    "/<rootDir>",
                    "/<rootDir>",
                    "/<rootDir>/node_modules",
                    "/Users/daniel/code/nuxt.js/packages/schema/node_modules"
                  ],
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "default": {
                "allow": [
                  "/<rootDir>/.nuxt",
                  "/<rootDir>",
                  "/<rootDir>",
                  "/<rootDir>",
                  "/<rootDir>/node_modules",
                  "/Users/daniel/code/nuxt.js/packages/schema/node_modules"
                ]
              },
              "type": "object"
            }
          },
          "default": {
            "fs": {
              "allow": [
                "/<rootDir>/.nuxt",
                "/<rootDir>",
                "/<rootDir>",
                "/<rootDir>",
                "/<rootDir>/node_modules",
                "/Users/daniel/code/nuxt.js/packages/schema/node_modules"
              ]
            }
          },
          "type": "object"
        }
      },
      "default": {
        "base": "/",
        "root": "/<rootDir>",
        "mode": "production",
        "define": {
          "__VUE_PROD_HYDRATION_MISMATCH_DETAILS__": false,
          "process.dev": false,
          "import.meta.dev": false,
          "process.test": false,
          "import.meta.test": false
        },
        "resolve": {
          "extensions": [
            ".mjs",
            ".js",
            ".ts",
            ".jsx",
            ".tsx",
            ".json",
            ".vue"
          ]
        },
        "publicDir": "/<rootDir>/public",
        "vue": {
          "isProduction": true,
          "template": {
            "compilerOptions": {}
          },
          "script": {
            "propsDestructure": false,
            "defineModel": false
          }
        },
        "vueJsx": {},
        "optimizeDeps": {
          "exclude": [
            "vue-demi"
          ]
        },
        "esbuild": {
          "jsxFactory": "h",
          "jsxFragment": "Fragment",
          "tsconfigRaw": "{}"
        },
        "clearScreen": true,
        "build": {
          "assetsDir": "_nuxt/",
          "emptyOutDir": false
        },
        "server": {
          "fs": {
            "allow": [
              "/<rootDir>/.nuxt",
              "/<rootDir>",
              "/<rootDir>",
              "/<rootDir>",
              "/<rootDir>/node_modules",
              "/Users/daniel/code/nuxt.js/packages/schema/node_modules"
            ]
          }
        }
      },
      "type": "object"
    },
    "webpack": {
      "id": "#webpack",
      "properties": {
        "analyze": {
          "title": "",
          "description": "",
          "tags": [],
          "tsType": "boolean | { enabled?: boolean } & typeof import('webpack-bundle-analyzer').BundleAnalyzerPlugin.Options",
          "markdownType": "boolean | { enabled?: boolean } & WebpackBundleAnalyzerBundleAnalyzerPluginOptions",
          "id": "#webpack/analyze",
          "default": {
            "template": "treemap",
            "projectRoot": "/<rootDir>",
            "filename": "/<rootDir>/.nuxt/analyze/{name}.html"
          },
          "type": "object"
        },
        "profile": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#webpack/profile",
          "default": false,
          "type": "boolean"
        },
        "extractCSS": {
          "title": "",
          "description": "",
          "tags": [],
          "tsType": "boolean | typeof import('mini-css-extract-plugin').PluginOptions",
          "markdownType": "boolean | MiniCssExtractPluginPluginOptions",
          "id": "#webpack/extractCSS",
          "default": true,
          "type": "boolean"
        },
        "cssSourceMap": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#webpack/cssSourceMap",
          "default": false,
          "type": "boolean"
        },
        "serverURLPolyfill": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#webpack/serverURLPolyfill",
          "default": "url",
          "type": "string"
        },
        "filenames": {
          "title": "",
          "description": "",
          "tags": [],
          "tsType": "\n Record<\n   string,\n   string |\n   ((\n     ctx: {\n       nuxt: import('../src/types/nuxt').Nuxt,\n       options: import('../src/types/nuxt').Nuxt['options'],\n       name: string,\n       isDev: boolean,\n       isServer: boolean,\n       isClient: boolean,\n       alias: { [index: string]: string | false | string[] },\n       transpile: RegExp[]\n     }) => string)\n >\n",
          "markdownType": "\n Record<\n   string,\n   string |\n   ((\n     ctx: {\n       nuxt: SrcTypesNuxtNuxt,\n       options: SrcTypesNuxtNuxt['options'],\n       name: string,\n       isDev: boolean,\n       isServer: boolean,\n       isClient: boolean,\n       alias: { [index: string]: string | false | string[] },\n       transpile: RegExp[]\n     }) => string)\n >\n",
          "id": "#webpack/filenames",
          "properties": {
            "app": {
              "type": "function",
              "id": "#webpack/filenames/app"
            },
            "chunk": {
              "type": "function",
              "id": "#webpack/filenames/chunk"
            },
            "css": {
              "type": "function",
              "id": "#webpack/filenames/css"
            },
            "img": {
              "type": "function",
              "id": "#webpack/filenames/img"
            },
            "font": {
              "type": "function",
              "id": "#webpack/filenames/font"
            },
            "video": {
              "type": "function",
              "id": "#webpack/filenames/video"
            }
          },
          "default": {},
          "type": "object"
        },
        "loaders": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#webpack/loaders",
          "properties": {
            "esbuild": {
              "title": "",
              "description": "",
              "tags": [],
              "tsType": "Omit<typeof import('esbuild-loader')['LoaderOptions'], 'loader'>",
              "markdownType": "Omit<EsbuildLoaderLoaderOptions, 'loader'>",
              "id": "#webpack/loaders/esbuild",
              "default": {},
              "type": "any"
            },
            "file": {
              "title": "",
              "description": "",
              "tags": [],
              "tsType": "Omit<typeof import('file-loader')['Options'], 'name'>",
              "markdownType": "Omit<FileLoaderOptions, 'name'>",
              "id": "#webpack/loaders/file",
              "properties": {
                "esModule": {
                  "type": "boolean",
                  "id": "#webpack/loaders/file/esModule",
                  "default": false
                }
              },
              "default": {
                "esModule": false
              },
              "type": "object"
            },
            "fontUrl": {
              "title": "",
              "description": "",
              "tags": [],
              "tsType": "Omit<typeof import('file-loader')['Options'], 'name'>",
              "markdownType": "Omit<FileLoaderOptions, 'name'>",
              "id": "#webpack/loaders/fontUrl",
              "properties": {
                "esModule": {
                  "type": "boolean",
                  "id": "#webpack/loaders/fontUrl/esModule",
                  "default": false
                },
                "limit": {
                  "type": "number",
                  "id": "#webpack/loaders/fontUrl/limit",
                  "default": 1000
                }
              },
              "default": {
                "esModule": false,
                "limit": 1000
              },
              "type": "object"
            },
            "imgUrl": {
              "title": "",
              "description": "",
              "tags": [],
              "tsType": "Omit<typeof import('file-loader')['Options'], 'name'>",
              "markdownType": "Omit<FileLoaderOptions, 'name'>",
              "id": "#webpack/loaders/imgUrl",
              "properties": {
                "esModule": {
                  "type": "boolean",
                  "id": "#webpack/loaders/imgUrl/esModule",
                  "default": false
                },
                "limit": {
                  "type": "number",
                  "id": "#webpack/loaders/imgUrl/limit",
                  "default": 1000
                }
              },
              "default": {
                "esModule": false,
                "limit": 1000
              },
              "type": "object"
            },
            "pugPlain": {
              "title": "",
              "description": "",
              "tags": [],
              "tsType": "typeof import('pug')['Options']",
              "markdownType": "PugOptions",
              "id": "#webpack/loaders/pugPlain",
              "default": {},
              "type": "any"
            },
            "vue": {
              "title": "",
              "description": "",
              "tags": [],
              "tsType": "Partial<typeof import('vue-loader')['VueLoaderOptions']>",
              "markdownType": "Partial<VueLoaderVueLoaderOptions>",
              "id": "#webpack/loaders/vue",
              "properties": {
                "transformAssetUrls": {
                  "id": "#webpack/loaders/vue/transformAssetUrls",
                  "properties": {
                    "video": {
                      "type": "string",
                      "id": "#webpack/loaders/vue/transformAssetUrls/video",
                      "default": "src"
                    },
                    "source": {
                      "type": "string",
                      "id": "#webpack/loaders/vue/transformAssetUrls/source",
                      "default": "src"
                    },
                    "object": {
                      "type": "string",
                      "id": "#webpack/loaders/vue/transformAssetUrls/object",
                      "default": "src"
                    },
                    "embed": {
                      "type": "string",
                      "id": "#webpack/loaders/vue/transformAssetUrls/embed",
                      "default": "src"
                    }
                  },
                  "default": {
                    "video": "src",
                    "source": "src",
                    "object": "src",
                    "embed": "src"
                  },
                  "type": "object"
                },
                "compilerOptions": {
                  "id": "#webpack/loaders/vue/compilerOptions",
                  "default": {},
                  "type": "object"
                },
                "propsDestructure": {
                  "id": "#webpack/loaders/vue/propsDestructure",
                  "default": false,
                  "type": "boolean"
                },
                "defineModel": {
                  "id": "#webpack/loaders/vue/defineModel",
                  "default": false,
                  "type": "boolean"
                }
              },
              "default": {
                "transformAssetUrls": {
                  "video": "src",
                  "source": "src",
                  "object": "src",
                  "embed": "src"
                },
                "compilerOptions": {},
                "propsDestructure": false,
                "defineModel": false
              },
              "type": "object"
            },
            "css": {
              "id": "#webpack/loaders/css",
              "properties": {
                "importLoaders": {
                  "type": "number",
                  "id": "#webpack/loaders/css/importLoaders",
                  "default": 0
                },
                "url": {
                  "id": "#webpack/loaders/css/url",
                  "properties": {
                    "filter": {
                      "type": "function",
                      "id": "#webpack/loaders/css/url/filter"
                    }
                  },
                  "default": {},
                  "type": "object"
                },
                "esModule": {
                  "type": "boolean",
                  "id": "#webpack/loaders/css/esModule",
                  "default": false
                }
              },
              "default": {
                "importLoaders": 0,
                "url": {},
                "esModule": false,
                "sourceMap": false
              },
              "type": "object"
            },
            "cssModules": {
              "id": "#webpack/loaders/cssModules",
              "properties": {
                "importLoaders": {
                  "type": "number",
                  "id": "#webpack/loaders/cssModules/importLoaders",
                  "default": 0
                },
                "url": {
                  "id": "#webpack/loaders/cssModules/url",
                  "properties": {
                    "filter": {
                      "type": "function",
                      "id": "#webpack/loaders/cssModules/url/filter"
                    }
                  },
                  "default": {},
                  "type": "object"
                },
                "esModule": {
                  "type": "boolean",
                  "id": "#webpack/loaders/cssModules/esModule",
                  "default": false
                },
                "modules": {
                  "id": "#webpack/loaders/cssModules/modules",
                  "properties": {
                    "localIdentName": {
                      "type": "string",
                      "id": "#webpack/loaders/cssModules/modules/localIdentName",
                      "default": "[local]_[hash:base64:5]"
                    }
                  },
                  "default": {
                    "localIdentName": "[local]_[hash:base64:5]"
                  },
                  "type": "object"
                }
              },
              "default": {
                "importLoaders": 0,
                "url": {},
                "esModule": false,
                "modules": {
                  "localIdentName": "[local]_[hash:base64:5]"
                },
                "sourceMap": false
              },
              "type": "object"
            },
            "less": {
              "title": "",
              "description": "",
              "tags": [],
              "id": "#webpack/loaders/less",
              "default": {
                "sourceMap": false
              },
              "type": "any"
            },
            "sass": {
              "title": "",
              "description": "",
              "tags": [],
              "tsType": "typeof import('sass-loader')['Options']",
              "markdownType": "SassLoaderOptions",
              "id": "#webpack/loaders/sass",
              "properties": {
                "sassOptions": {
                  "id": "#webpack/loaders/sass/sassOptions",
                  "properties": {
                    "indentedSyntax": {
                      "type": "boolean",
                      "id": "#webpack/loaders/sass/sassOptions/indentedSyntax",
                      "default": true
                    }
                  },
                  "default": {
                    "indentedSyntax": true
                  },
                  "type": "object"
                }
              },
              "default": {
                "sassOptions": {
                  "indentedSyntax": true
                },
                "sourceMap": false
              },
              "type": "object"
            },
            "scss": {
              "title": "",
              "description": "",
              "tags": [],
              "tsType": "typeof import('sass-loader')['Options']",
              "markdownType": "SassLoaderOptions",
              "id": "#webpack/loaders/scss",
              "default": {
                "sourceMap": false
              },
              "type": "any"
            },
            "stylus": {
              "title": "",
              "description": "",
              "tags": [],
              "id": "#webpack/loaders/stylus",
              "default": {
                "sourceMap": false
              },
              "type": "any"
            },
            "vueStyle": {
              "id": "#webpack/loaders/vueStyle",
              "default": {
                "sourceMap": false
              },
              "type": "any"
            }
          },
          "default": {
            "esbuild": {},
            "file": {
              "esModule": false
            },
            "fontUrl": {
              "esModule": false,
              "limit": 1000
            },
            "imgUrl": {
              "esModule": false,
              "limit": 1000
            },
            "pugPlain": {},
            "vue": {
              "transformAssetUrls": {
                "video": "src",
                "source": "src",
                "object": "src",
                "embed": "src"
              },
              "compilerOptions": {},
              "propsDestructure": false,
              "defineModel": false
            },
            "css": {
              "importLoaders": 0,
              "url": {},
              "esModule": false,
              "sourceMap": false
            },
            "cssModules": {
              "importLoaders": 0,
              "url": {},
              "esModule": false,
              "modules": {
                "localIdentName": "[local]_[hash:base64:5]"
              },
              "sourceMap": false
            },
            "less": {
              "sourceMap": false
            },
            "sass": {
              "sassOptions": {
                "indentedSyntax": true
              },
              "sourceMap": false
            },
            "scss": {
              "sourceMap": false
            },
            "stylus": {
              "sourceMap": false
            },
            "vueStyle": {
              "sourceMap": false
            }
          },
          "type": "object"
        },
        "plugins": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#webpack/plugins",
          "default": [],
          "type": "array",
          "items": {
            "type": "any"
          }
        },
        "aggressiveCodeRemoval": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#webpack/aggressiveCodeRemoval",
          "default": false,
          "type": "boolean"
        },
        "optimizeCSS": {
          "title": "",
          "description": "",
          "tags": [],
          "tsType": "false | typeof import('css-minimizer-webpack-plugin').BasePluginOptions & typeof import('css-minimizer-webpack-plugin').DefinedDefaultMinimizerAndOptions<any>",
          "markdownType": "false | CssMinimizerWebpackPluginBasePluginOptions & CssMinimizerWebpackPluginDefinedDefaultMinimizerAndOptions<any>",
          "id": "#webpack/optimizeCSS",
          "default": false,
          "type": "boolean"
        },
        "optimization": {
          "title": "",
          "description": "",
          "tags": [],
          "tsType": "false | typeof import('webpack').Configuration['optimization']",
          "markdownType": "false | WebpackConfiguration['optimization']",
          "id": "#webpack/optimization",
          "properties": {
            "runtimeChunk": {
              "type": "string",
              "id": "#webpack/optimization/runtimeChunk",
              "default": "single"
            },
            "minimize": {
              "title": "",
              "description": "",
              "tags": [],
              "id": "#webpack/optimization/minimize",
              "default": true,
              "type": "boolean"
            },
            "minimizer": {
              "title": "",
              "description": "",
              "tags": [],
              "id": "#webpack/optimization/minimizer",
              "default": {},
              "type": "any"
            },
            "splitChunks": {
              "id": "#webpack/optimization/splitChunks",
              "properties": {
                "chunks": {
                  "type": "string",
                  "id": "#webpack/optimization/splitChunks/chunks",
                  "default": "all"
                },
                "automaticNameDelimiter": {
                  "type": "string",
                  "id": "#webpack/optimization/splitChunks/automaticNameDelimiter",
                  "default": "/"
                },
                "cacheGroups": {
                  "id": "#webpack/optimization/splitChunks/cacheGroups",
                  "default": {},
                  "type": "any"
                }
              },
              "default": {
                "chunks": "all",
                "automaticNameDelimiter": "/",
                "cacheGroups": {}
              },
              "type": "object"
            }
          },
          "default": {
            "runtimeChunk": "single",
            "minimize": true,
            "minimizer": {},
            "splitChunks": {
              "chunks": "all",
              "automaticNameDelimiter": "/",
              "cacheGroups": {}
            }
          },
          "type": "object"
        },
        "postcss": {
          "title": "",
          "description": "",
          "tags": [],
          "tsType": "{ execute?: boolean, postcssOptions: typeof import('postcss').ProcessOptions, sourceMap?: boolean, implementation?: any }",
          "markdownType": "{ execute?: boolean, postcssOptions: PostcssProcessOptions, sourceMap?: boolean, implementation?: any }",
          "id": "#webpack/postcss",
          "properties": {
            "postcssOptions": {
              "id": "#webpack/postcss/postcssOptions",
              "properties": {
                "config": {
                  "id": "#webpack/postcss/postcssOptions/config",
                  "default": {},
                  "type": "any"
                },
                "plugins": {
                  "id": "#webpack/postcss/postcssOptions/plugins",
                  "default": {
                    "autoprefixer": {},
                    "cssnano": {}
                  },
                  "type": "object"
                }
              },
              "default": {
                "config": {},
                "plugins": {
                  "autoprefixer": {},
                  "cssnano": {}
                }
              },
              "type": "object"
            }
          },
          "default": {
            "postcssOptions": {
              "config": {},
              "plugins": {
                "autoprefixer": {},
                "cssnano": {}
              }
            }
          },
          "type": "object"
        },
        "devMiddleware": {
          "title": "",
          "description": "",
          "tags": [],
          "tsType": "typeof import('webpack-dev-middleware').Options<typeof import('http').IncomingMessage, typeof import('http').ServerResponse>",
          "markdownType": "WebpackDevMiddlewareOptions<typeof HttpIncomingMessage, HttpServerResponse>",
          "id": "#webpack/devMiddleware",
          "properties": {
            "stats": {
              "type": "string",
              "id": "#webpack/devMiddleware/stats",
              "default": "none"
            }
          },
          "default": {
            "stats": "none"
          },
          "type": "object"
        },
        "hotMiddleware": {
          "title": "",
          "description": "",
          "tags": [],
          "tsType": "typeof import('webpack-hot-middleware').MiddlewareOptions & { client?: typeof import('webpack-hot-middleware').ClientOptions }",
          "markdownType": "WebpackHotMiddlewareMiddlewareOptions & { client?: WebpackHotMiddlewareClientOptions }",
          "id": "#webpack/hotMiddleware",
          "default": {},
          "type": "any"
        },
        "friendlyErrors": {
          "title": "",
          "description": "",
          "tags": [],
          "id": "#webpack/friendlyErrors",
          "default": true,
          "type": "boolean"
        },
        "warningIgnoreFilters": {
          "title": "",
          "description": "",
          "tags": [],
          "tsType": "Array<(warn: typeof import('webpack').WebpackError) => boolean>",
          "markdownType": "Array<(warn: WebpackWebpackError) => boolean>",
          "id": "#webpack/warningIgnoreFilters",
          "default": [],
          "type": "array",
          "items": {
            "type": "any"
          }
        },
        "experiments": {
          "title": "",
          "description": "",
          "tags": [],
          "tsType": "false | typeof import('webpack').Configuration['experiments']",
          "markdownType": "false | WebpackConfiguration['experiments']",
          "id": "#webpack/experiments",
          "default": {},
          "type": "any"
        }
      },
      "default": {
        "analyze": {
          "template": "treemap",
          "projectRoot": "/<rootDir>",
          "filename": "/<rootDir>/.nuxt/analyze/{name}.html"
        },
        "profile": false,
        "extractCSS": true,
        "cssSourceMap": false,
        "serverURLPolyfill": "url",
        "filenames": {},
        "loaders": {
          "esbuild": {},
          "file": {
            "esModule": false
          },
          "fontUrl": {
            "esModule": false,
            "limit": 1000
          },
          "imgUrl": {
            "esModule": false,
            "limit": 1000
          },
          "pugPlain": {},
          "vue": {
            "transformAssetUrls": {
              "video": "src",
              "source": "src",
              "object": "src",
              "embed": "src"
            },
            "compilerOptions": {},
            "propsDestructure": false,
            "defineModel": false
          },
          "css": {
            "importLoaders": 0,
            "url": {},
            "esModule": false,
            "sourceMap": false
          },
          "cssModules": {
            "importLoaders": 0,
            "url": {},
            "esModule": false,
            "modules": {
              "localIdentName": "[local]_[hash:base64:5]"
            },
            "sourceMap": false
          },
          "less": {
            "sourceMap": false
          },
          "sass": {
            "sassOptions": {
              "indentedSyntax": true
            },
            "sourceMap": false
          },
          "scss": {
            "sourceMap": false
          },
          "stylus": {
            "sourceMap": false
          },
          "vueStyle": {
            "sourceMap": false
          }
        },
        "plugins": [],
        "aggressiveCodeRemoval": false,
        "optimizeCSS": false,
        "optimization": {
          "runtimeChunk": "single",
          "minimize": true,
          "minimizer": {},
          "splitChunks": {
            "chunks": "all",
            "automaticNameDelimiter": "/",
            "cacheGroups": {}
          }
        },
        "postcss": {
          "postcssOptions": {
            "config": {},
            "plugins": {
              "autoprefixer": {},
              "cssnano": {}
            }
          }
        },
        "devMiddleware": {
          "stats": "none"
        },
        "hotMiddleware": {},
        "friendlyErrors": true,
        "warningIgnoreFilters": [],
        "experiments": {}
      },
      "type": "object"
    }
  },
  "default": {
    "components": {
      "dirs": [
        {
          "path": "~/components/global",
          "global": true
        },
        "~/components"
      ]
    },
    "imports": {
      "global": false,
      "dirs": []
    },
    "telemetry": {},
    "devtools": {},
    "vue": {
      "compilerOptions": {},
      "runtimeCompiler": false,
      "propsDestructure": false,
      "defineModel": false
    },
    "app": {
      "baseURL": "/",
      "buildAssetsDir": "/_nuxt/",
      "cdnURL": "",
      "head": {
        "meta": [
          {
            "name": "viewport",
            "content": "width=device-width, initial-scale=1"
          },
          {
            "charset": "utf-8"
          }
        ],
        "link": [],
        "style": [],
        "script": [],
        "noscript": []
      },
      "layoutTransition": false,
      "pageTransition": false,
      "keepalive": false,
      "rootId": "__nuxt",
      "rootTag": "div"
    },
    "spaLoadingTemplate": null,
    "plugins": [],
    "css": [],
    "builder": "@nuxt/vite-builder",
    "sourcemap": {
      "server": true,
      "client": false
    },
    "logLevel": "info",
    "build": {
      "transpile": [],
      "templates": [],
      "analyze": {
        "template": "treemap",
        "projectRoot": "/<rootDir>",
        "filename": "/<rootDir>/.nuxt/analyze/{name}.html"
      }
    },
    "optimization": {
      "keyedComposables": [
        {
          "name": "callOnce",
          "argumentLength": 2
        },
        {
          "name": "defineNuxtComponent",
          "argumentLength": 2
        },
        {
          "name": "useState",
          "argumentLength": 2
        },
        {
          "name": "useFetch",
          "argumentLength": 3
        },
        {
          "name": "useAsyncData",
          "argumentLength": 3
        },
        {
          "name": "useLazyAsyncData",
          "argumentLength": 3
        },
        {
          "name": "useLazyFetch",
          "argumentLength": 3
        }
      ],
      "treeShake": {
        "composables": {
          "server": {
            "vue": [
              "onBeforeMount",
              "onMounted",
              "onBeforeUpdate",
              "onRenderTracked",
              "onRenderTriggered",
              "onActivated",
              "onDeactivated",
              "onBeforeUnmount"
            ],
            "#app": [
              "definePayloadReviver",
              "definePageMeta"
            ]
          },
          "client": {
            "vue": [
              "onServerPrefetch",
              "onRenderTracked",
              "onRenderTriggered"
            ],
            "#app": [
              "definePayloadReducer",
              "definePageMeta"
            ]
          }
        }
      },
      "asyncTransforms": {
        "asyncFunctions": [
          "defineNuxtPlugin",
          "defineNuxtRouteMiddleware"
        ],
        "objectDefinitions": {
          "defineNuxtComponent": [
            "asyncData",
            "setup"
          ],
          "defineNuxtPlugin": [
            "setup"
          ],
          "definePageMeta": [
            "middleware",
            "validate"
          ]
        }
      }
    },
    "extends": null,
    "theme": null,
    "rootDir": "/<rootDir>",
    "workspaceDir": "/<rootDir>",
    "srcDir": "/<rootDir>",
    "serverDir": "/<rootDir>/server",
    "buildDir": "/<rootDir>/.nuxt",
    "modulesDir": [
      "/<rootDir>/node_modules",
      "/Users/daniel/code/nuxt.js/packages/schema/node_modules"
    ],
    "analyzeDir": "/<rootDir>/.nuxt/analyze",
    "dev": false,
    "test": false,
    "debug": false,
    "ssr": true,
    "modules": [],
    "dir": {
      "assets": "assets",
      "layouts": "layouts",
      "middleware": "middleware",
      "modules": "modules",
      "pages": "pages",
      "plugins": "plugins",
      "static": "public",
      "public": "public"
    },
    "extensions": [
      ".js",
      ".jsx",
      ".mjs",
      ".ts",
      ".tsx",
      ".vue"
    ],
    "alias": {
      "~": "/<rootDir>",
      "@": "/<rootDir>",
      "~~": "/<rootDir>",
      "@@": "/<rootDir>",
      "assets": "/<rootDir>/assets",
      "public": "/<rootDir>/public"
    },
    "ignoreOptions": {},
    "ignorePrefix": "-",
    "ignore": [
      "**/*.stories.{js,cts,mts,ts,jsx,tsx}",
      "**/*.{spec,test}.{js,cts,mts,ts,jsx,tsx}",
      "**/*.d.{cts,mts,ts}",
      "**/.{pnpm-store,vercel,netlify,output,git,cache,data}",
      ".nuxt/analyze",
      ".nuxt",
      "**/-*.*"
    ],
    "watch": [],
    "watchers": {
      "rewatchOnRawEvents": {},
      "webpack": {
        "aggregateTimeout": 1000
      },
      "chokidar": {
        "ignoreInitial": true
      }
    },
    "hooks": null,
    "runtimeConfig": {
      "public": {},
      "app": {
        "baseURL": "/",
        "buildAssetsDir": "/_nuxt/",
        "cdnURL": ""
      }
    },
    "appConfig": {
      "nuxt": {}
    },
    "devServer": {
      "https": false,
      "port": 3000,
      "host": {},
      "url": "http://localhost:3000"
    },
    "future": {
      "typescriptBundlerResolution": false
    },
    "features": {
      "inlineStyles": true,
      "noScripts": false
    },
    "experimental": {
      "asyncEntry": false,
      "externalVue": true,
      "treeshakeClientOnly": true,
      "emitRouteChunkError": "automatic",
      "templateRouteInjection": true,
      "restoreState": false,
      "renderJsonPayloads": true,
      "noVueServer": false,
      "payloadExtraction": true,
      "clientFallback": false,
      "crossOriginPrefetch": false,
      "viewTransition": false,
      "writeEarlyHints": false,
      "componentIslands": false,
      "configSchema": true,
      "polyfillVueUseHead": false,
      "respectNoSSRHeader": false,
      "localLayerAliases": true,
      "typedPages": false,
      "appManifest": true,
      "watcher": "chokidar-granular",
      "asyncContext": false,
      "headNext": false,
      "inlineRouteRules": false,
      "defaults": {
        "nuxtLink": {
          "componentName": "NuxtLink"
        },
        "useAsyncData": {
          "deep": true
        },
        "useFetch": {}
      }
    },
    "generate": {
      "routes": [],
      "exclude": []
    },
    "_majorVersion": 3,
    "_legacyGenerate": false,
    "_start": false,
    "_build": false,
    "_generate": false,
    "_prepare": false,
    "_cli": false,
    "_requiredModules": {},
    "_nuxtConfigFile": {},
    "_nuxtConfigFiles": [],
    "appDir": "",
    "_installedModules": [],
    "_modules": [],
    "nitro": {
      "routeRules": {}
    },
    "routeRules": {},
    "serverHandlers": [],
    "devServerHandlers": [],
    "postcss": {
      "plugins": {
        "autoprefixer": {},
        "cssnano": {}
      }
    },
    "router": {
      "options": {
        "hashMode": false,
        "scrollBehaviorType": "auto"
      }
    },
    "typescript": {
      "tsConfig": {
        "compilerOptions": {}
      },
      "strict": true,
      "builder": null,
      "includeWorkspace": false,
      "typeCheck": false,
      "shim": true
    },
    "vite": {
      "base": "/",
      "root": "/<rootDir>",
      "mode": "production",
      "define": {
        "__VUE_PROD_HYDRATION_MISMATCH_DETAILS__": false,
        "process.dev": false,
        "import.meta.dev": false,
        "process.test": false,
        "import.meta.test": false
      },
      "resolve": {
        "extensions": [
          ".mjs",
          ".js",
          ".ts",
          ".jsx",
          ".tsx",
          ".json",
          ".vue"
        ]
      },
      "publicDir": "/<rootDir>/public",
      "vue": {
        "isProduction": true,
        "template": {
          "compilerOptions": {}
        },
        "script": {
          "propsDestructure": false,
          "defineModel": false
        }
      },
      "vueJsx": {},
      "optimizeDeps": {
        "exclude": [
          "vue-demi"
        ]
      },
      "esbuild": {
        "jsxFactory": "h",
        "jsxFragment": "Fragment",
        "tsconfigRaw": "{}"
      },
      "clearScreen": true,
      "build": {
        "assetsDir": "_nuxt/",
        "emptyOutDir": false
      },
      "server": {
        "fs": {
          "allow": [
            "/<rootDir>/.nuxt",
            "/<rootDir>",
            "/<rootDir>",
            "/<rootDir>",
            "/<rootDir>/node_modules",
            "/Users/daniel/code/nuxt.js/packages/schema/node_modules"
          ]
        }
      }
    },
    "webpack": {
      "analyze": {
        "template": "treemap",
        "projectRoot": "/<rootDir>",
        "filename": "/<rootDir>/.nuxt/analyze/{name}.html"
      },
      "profile": false,
      "extractCSS": true,
      "cssSourceMap": false,
      "serverURLPolyfill": "url",
      "filenames": {},
      "loaders": {
        "esbuild": {},
        "file": {
          "esModule": false
        },
        "fontUrl": {
          "esModule": false,
          "limit": 1000
        },
        "imgUrl": {
          "esModule": false,
          "limit": 1000
        },
        "pugPlain": {},
        "vue": {
          "transformAssetUrls": {
            "video": "src",
            "source": "src",
            "object": "src",
            "embed": "src"
          },
          "compilerOptions": {},
          "propsDestructure": false,
          "defineModel": false
        },
        "css": {
          "importLoaders": 0,
          "url": {},
          "esModule": false,
          "sourceMap": false
        },
        "cssModules": {
          "importLoaders": 0,
          "url": {},
          "esModule": false,
          "modules": {
            "localIdentName": "[local]_[hash:base64:5]"
          },
          "sourceMap": false
        },
        "less": {
          "sourceMap": false
        },
        "sass": {
          "sassOptions": {
            "indentedSyntax": true
          },
          "sourceMap": false
        },
        "scss": {
          "sourceMap": false
        },
        "stylus": {
          "sourceMap": false
        },
        "vueStyle": {
          "sourceMap": false
        }
      },
      "plugins": [],
      "aggressiveCodeRemoval": false,
      "optimizeCSS": false,
      "optimization": {
        "runtimeChunk": "single",
        "minimize": true,
        "minimizer": {},
        "splitChunks": {
          "chunks": "all",
          "automaticNameDelimiter": "/",
          "cacheGroups": {}
        }
      },
      "postcss": {
        "postcssOptions": {
          "config": {},
          "plugins": {
            "autoprefixer": {},
            "cssnano": {}
          }
        }
      },
      "devMiddleware": {
        "stats": "none"
      },
      "hotMiddleware": {},
      "friendlyErrors": true,
      "warningIgnoreFilters": [],
      "experiments": {}
    }
  },
  "type": "object"
}