#!/usr/bin/env node
'use strict';

const citty = require('citty');
const index = require('./index.cjs');
require('node:fs');
require('node:fs/promises');
require('pathe');
require('node:module');
require('ufo');

const name = "nypm";
const version = "0.3.4";
const description = "Unified Package Manager for Node.js";
const repository = "unjs/nypm";
const license = "MIT";
const sideEffects = false;
const type = "module";
const exports$1 = {
	".": {
		types: "./dist/index.d.ts",
		"import": "./dist/index.mjs",
		require: "./dist/index.cjs"
	}
};
const bin = {
	nypm: "./dist/cli.mjs"
};
const main$1 = "./dist/index.cjs";
const module$1 = "./dist/index.mjs";
const types = "./dist/index.d.ts";
const files = [
	"dist"
];
const scripts = {
	build: "unbuild",
	dev: "vitest dev",
	lint: "eslint --ext .ts,.js,.mjs,.cjs . && prettier -c src test",
	"lint:fix": "eslint --ext .ts,.js,.mjs,.cjs . --fix && prettier -w src test",
	prepack: "unbuild",
	nypm: "jiti src/cli.ts",
	release: "pnpm test && pnpm build && changelogen --release --push && pnpm publish",
	test: "pnpm lint && pnpm test:types && vitest run --coverage",
	"test:types": "tsc --noEmit"
};
const dependencies = {
	citty: "^0.1.5",
	execa: "^8.0.1",
	pathe: "^1.1.1",
	ufo: "^1.3.2"
};
const devDependencies = {
	"@types/node": "^20.10.6",
	"@vitest/coverage-v8": "^1.1.0",
	changelogen: "^0.5.5",
	eslint: "^8.56.0",
	"eslint-config-unjs": "^0.2.1",
	jiti: "^1.21.0",
	prettier: "^3.1.1",
	"std-env": "^3.7.0",
	typescript: "^5.3.3",
	unbuild: "^2.0.0",
	vitest: "^1.1.0"
};
const packageManager = "pnpm@8.13.1";
const engines = {
	node: "^14.16.0 || >=16.10.0"
};
const pkg = {
	name: name,
	version: version,
	description: description,
	repository: repository,
	license: license,
	sideEffects: sideEffects,
	type: type,
	exports: exports$1,
	bin: bin,
	main: main$1,
	module: module$1,
	types: types,
	files: files,
	scripts: scripts,
	dependencies: dependencies,
	devDependencies: devDependencies,
	packageManager: packageManager,
	engines: engines
};

const operationArgs = {
  cwd: {
    type: "string",
    description: "Current working directory"
  },
  workspace: {
    type: "boolean",
    description: "Add to workspace"
  },
  silent: {
    type: "boolean",
    description: "Run in silent mode"
  }
};
const install = citty.defineCommand({
  meta: {
    description: "Install dependencies"
  },
  args: {
    ...operationArgs,
    name: {
      type: "positional",
      description: "Dependency name",
      required: false
    },
    dev: {
      type: "boolean",
      alias: "D",
      description: "Add as dev dependency"
    }
  },
  run: async ({ args }) => {
    await (args.name ? index.addDependency(args.name, args) : index.installDependencies(args));
  }
});
const remove = citty.defineCommand({
  meta: {
    description: "Remove dependencies"
  },
  args: {
    name: {
      type: "positional",
      description: "Dependency name",
      required: true
    },
    ...operationArgs
  },
  run: async ({ args }) => {
    await index.removeDependency(args.name, args);
  }
});
const main = citty.defineCommand({
  meta: {
    name: pkg.name,
    version: pkg.version,
    description: pkg.description
  },
  subCommands: {
    install,
    i: install,
    add: install,
    remove
  }
});
citty.runMain(main);
